{"version":3,"sources":["Components/NavbarHead.js","Home.js","Components/GetDisease.js","Components/FormClass.js","DiseasePrediction.js","Components/CreateChart.js","Statistics.js","ShowMore.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["NavbarHead","Navbar","sticky","collapseOnSelect","expand","bg","variant","to","Brand","className","Toggle","aria-controls","Collapse","id","Nav","Link","as","eventKey","href","Home","props","handleChange","event","setState","username","target","value","state","this","Form","Row","Col","sm","md","lg","Group","controlId","Control","onChange","type","placeholder","Button","React","Component","GetDisease","symptoms","symp","data","disease","GetFromFlask","bind","dname","localStorage","getItem","JSON","parse","fetch","then","response","json","setItem","stringify","console","log","Container","FormClass","selectedOptions","syms","showComponent","GetDiseaseDisp","Predict","toSend","_onButtonClick","_isMounted","map","item","join","SymptomsInput","noGutters","Label","size","clearButton","labelKey","multiple","options","onClick","_redirectToShowMore","DiseasePrediction","CreateChart","Statistics","ShowMore","Main","exact","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.70cde466.chunk.js","sourcesContent":["import React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport NavDropdown from 'react-bootstrap/NavDropdown'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport { Link } from \"react-router-dom\";\r\nimport './NavbarHead.css'\r\n\r\nfunction NavbarHead() {\r\n  return (\r\n    <Navbar sticky=\"top\" collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n      <Link to=\"/\">\r\n        <Navbar.Brand className=\"brand\">Disease Predictor</Navbar.Brand>\r\n      </Link>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n\r\n          <Nav.Link as={Link} className=\"lnk\" to=\"/DiseasePrediction\">Predict Disease</Nav.Link>\r\n\r\n          <Nav.Link as={Link} className=\"lnk\" to=\"/Statistics\">View Statistics</Nav.Link>\r\n        {/* <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\r\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n              <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n            </NavDropdown> */}\r\n        </Nav>\r\n      <Nav>\r\n        <Nav.Link eventKey={2} href=\"https://ashleshmahule.me/\" className=\"lnk\">Developer</Nav.Link>\r\n      </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar >\r\n\r\n  );\r\n}\r\n\r\nexport default NavbarHead;","import React from 'react';\r\nimport NavbarHead from './Components/NavbarHead';\r\nimport './Home.css';\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button'\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass Home extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: null\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({ username: event.target.value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <NavbarHead />\r\n                <header className=\"App-header\">\r\n                    <h1>Welcome {this.state.username}</h1>\r\n                </header>\r\n\r\n                <Form id=\"form\">\r\n                    <Row className=\"justify-content-md-center\">\r\n                        <Col sm=\"3\" md=\"3\" lg=\"3\" >\r\n                            <Form.Group as={Form.Row} controlId=\"name\">\r\n                                <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Enter Your Name\" />\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n\r\n                <Link to='/DiseasePrediction'>\r\n                    <Button className=\"gs\" variant=\"light\">Get Started</Button>\r\n                </Link>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport './GetDisease.css';\r\n\r\n\r\nclass GetDisease extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.symptoms = props.symp;\r\n        this.data = {};\r\n        this.state = {\r\n            disease: null\r\n        };\r\n        // this.SendData = this.SendData.bind(this);\r\n        this.GetFromFlask = this.GetFromFlask.bind(this);\r\n    }\r\n\r\n    async GetFromFlask() {\r\n        let dname = localStorage.getItem(\"diseaseName\");\r\n\r\n        if (dname) {\r\n            dname = JSON.parse(dname);\r\n            this.setState({ dname });\r\n        } else {\r\n            fetch('https://diseasepredtictor.herokuapp.com/getDisease?query=' + this.symptoms)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    this.setState({ disease: data.disease });\r\n                    localStorage.setItem(\"dname\", JSON.stringify(dname));\r\n                });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.GetFromFlask();\r\n        if (this.state.disease != null) {\r\n            fetch('https://diseasepredictorapp.herokuapp.com/GetMore?query='+this.state.disease);\r\n            console.log('sent ' + this.state.disease);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.disease != null) {\r\n            fetch('https://diseasepredictorapp.herokuapp.com/GetMore?query='+this.state.disease);\r\n            console.log('sent ' + this.state.disease);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var { disease } = this.state;\r\n        console.log({ disease });\r\n        // this.SendData();\r\n\r\n        if (this.state.disease != null) {\r\n            fetch('https://diseasepredictorapp.herokuapp.com/GetMore?query='+this.state.disease);\r\n            console.log('sent ' + this.state.disease);\r\n        }\r\n\r\n        fetch('https://diseasepredictorapp.herokuapp.com/GetMore')\r\n        .then(response => response.json)\r\n        .then(data => {\r\n            console.log(data.data);\r\n        });\r\n\r\n        return (\r\n            <>\r\n                <Container>\r\n                    <Row className=\"justify-content-md-center predicted\">\r\n                        <Col sm=\"6\" md=\"6\" lg=\"6\">\r\n                            Predicted Disease: {this.state.disease}\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default GetDisease;","import React from 'react';\r\nimport {\r\n    Typeahead\r\n} from 'react-bootstrap-typeahead';\r\n\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport './FormClass.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport GetDisease from './GetDisease';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass FormClass extends React.Component {\r\n\r\n    symptoms = [\r\n        \"abdominal_pain\",\r\n        \"abnormal_menstruation\",\r\n        \"acidity\",\r\n        \"acute_liver_failure\",\r\n        \"altered_sensorium\",\r\n        \"anxiety\",\r\n        \"back_pain\",\r\n        \"belly_pain\",\r\n        \"blackheads\",\r\n        \"bladder_discomfort\",\r\n        \"blister\",\r\n        \"blood_in_sputum\",\r\n        \"bloody_stool\",\r\n        \"blurred_and_distorted_vision\",\r\n        \"breathlessness\",\r\n        \"brittle_nails\",\r\n        \"bruising\",\r\n        \"burning_micturition\",\r\n        \"chest_pain\",\r\n        \"chills\",\r\n        \"cold_hands_and_feets\",\r\n        \"coma\",\r\n        \"congestion\",\r\n        \"constipation\",\r\n        \"continuous_feel_of_urine\",\r\n        \"continuous_sneezing\",\r\n        \"cough\",\r\n        \"cramps\",\r\n        \"dark_urine\",\r\n        \"dehydration\",\r\n        \"depression\",\r\n        \"diarrhoea\",\r\n        \"dischromic _patches\",\r\n        \"distention_of_abdomen\",\r\n        \"dizziness\",\r\n        \"drying_and_tingling_lips\",\r\n        \"enlarged_thyroid\",\r\n        \"excessive_hunger\",\r\n        \"extra_marital_contacts\",\r\n        \"family_history\",\r\n        \"fast_heart_rate\",\r\n        \"fatigue\",\r\n        \"fluid_overload\",\r\n        \"fluid_overload.1\",\r\n        \"foul_smell_of urine\",\r\n        \"headache\",\r\n        \"high_fever\",\r\n        \"hip_joint_pain\",\r\n        \"history_of_alcohol_consumption\",\r\n        \"increased_appetite\",\r\n        \"indigestion\",\r\n        \"inflammatory_nails\",\r\n        \"internal_itching\",\r\n        \"irregular_sugar_level\",\r\n        \"irritability\",\r\n        \"irritation_in_anus\",\r\n        \"itching\",\r\n        \"joint_pain\",\r\n        \"knee_pain\",\r\n        \"lack_of_concentration\",\r\n        \"lethargy\",\r\n        \"loss_of_appetite\",\r\n        \"loss_of_balance\",\r\n        \"loss_of_smell\",\r\n        \"malaise\",\r\n        \"mild_fever\",\r\n        \"mood_swings\",\r\n        \"movement_stiffness\",\r\n        \"mucoid_sputum\",\r\n        \"muscle_pain\",\r\n        \"muscle_wasting\",\r\n        \"muscle_weakness\",\r\n        \"nausea\",\r\n        \"neck_pain\",\r\n        \"nodal_skin_eruptions\",\r\n        \"obesity\",\r\n        \"pain_behind_the_eyes\",\r\n        \"pain_during_bowel_movements\",\r\n        \"pain_in_anal_region\",\r\n        \"painful_walking\",\r\n        \"palpitations\",\r\n        \"passage_of_gases\",\r\n        \"patches_in_throat\",\r\n        \"phlegm\",\r\n        \"polyuria\",\r\n        \"prominent_veins_on_calf\",\r\n        \"puffy_face_and_eyes\",\r\n        \"pus_filled_pimples\",\r\n        \"receiving_blood_transfusion\",\r\n        \"receiving_unsterile_injections\",\r\n        \"red_sore_around_nose\",\r\n        \"red_spots_over_body\",\r\n        \"redness_of_eyes\",\r\n        \"restlessness\",\r\n        \"runny_nose\",\r\n        \"rusty_sputum\",\r\n        \"scurring\",\r\n        \"shivering\",\r\n        \"silver_like_dusting\",\r\n        \"sinus_pressure\",\r\n        \"skin_peeling\",\r\n        \"skin_rash\",\r\n        \"slurred_speech\",\r\n        \"small_dents_in_nails\",\r\n        \"spinning_movements\",\r\n        \"spotting_ urination\",\r\n        \"stiff_neck\",\r\n        \"stomach_bleeding\",\r\n        \"stomach_pain\",\r\n        \"sunken_eyes\",\r\n        \"sweating\",\r\n        \"swelled_lymph_nodes\",\r\n        \"swelling_joints\",\r\n        \"swelling_of_stomach\",\r\n        \"swollen_blood_vessels\",\r\n        \"swollen_extremeties\",\r\n        \"swollen_legs\",\r\n        \"throat_irritation\",\r\n        \"toxic_look_(typhos)\",\r\n        \"ulcers_on_tongue\",\r\n        \"unsteadiness\",\r\n        \"visual_disturbances\",\r\n        \"vomiting\",\r\n        \"watering_from_eyes\",\r\n        \"weakness_in_limbs\",\r\n        \"weakness_of_one_body_side\",\r\n        \"weight_gain\",\r\n        \"weight_loss\",\r\n        \"yellow_crust_ooze\",\r\n        \"yellow_urine\",\r\n        \"yellowing_of_eyes\",\r\n        \"yellowish_skin\"\r\n    ];\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showComponent: false\r\n        }\r\n        this.syms = [];\r\n        this.GetDiseaseDisp = null;\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.Predict = this.Predict.bind(this);\r\n        this.toSend = '';\r\n        this._onButtonClick = this._onButtonClick.bind(this);\r\n        this.disease = '';\r\n        this._isMounted = false;\r\n\r\n    }\r\n\r\n\r\n    handleChange = selectedOptions => {\r\n        console.log(selectedOptions);\r\n        this.syms = selectedOptions;\r\n        console.log(this.syms);\r\n    }\r\n\r\n\r\n    _onButtonClick() {\r\n        this.setState({\r\n            showComponent: true,\r\n        });\r\n    }\r\n\r\n\r\n    Predict() {\r\n        this._isMounted = true;\r\n\r\n        if (this._isMounted) {\r\n            this.toSend = this.syms.map((item) => `${item}`).join(',');\r\n            console.log(this.toSend);\r\n        }\r\n        return (\r\n            <>\r\n                {this._isMounted ? <GetDisease symp={this.toSend} /> : null}\r\n            </>\r\n        );\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        fetch('https://diseasepredictorapp.herokuapp.com/GetMore')\r\n        .then(response => response.json)\r\n        .then(data => {\r\n            console.log(data);\r\n            this.disease = data.data;\r\n        });\r\n    }\r\n\r\n    _redirectToShowMore() {\r\n\r\n        // this.context.router.push({\r\n        //     pathname: '/ShowMore'\r\n        // });\r\n        fetch('https://diseasepredictorapp.herokuapp.com/GetMore')\r\n        .then(response => response.json)\r\n        .then(data => {\r\n            console.log(data);\r\n            this.disease = data.data;\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        fetch('https://diseasepredictorapp.herokuapp.com/GetMore')\r\n        .then(response => response.json)\r\n        .then(data => {\r\n            console.log(data);\r\n            this.disease = data.data;\r\n        });\r\n\r\n        const SymptomsInput = (props) => (\r\n            <>\r\n                <Container id='cont'>\r\n                    <Row noGutters id=\"symp-1\" className=\"justify-content-md-center\">\r\n                        <Col sm=\"9\" md=\"9\" lg=\"9\">\r\n                            <Form.Label>\r\n                                Choose The Symptoms You Have Been Experiencing Lately\r\n                        </Form.Label>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row id=\"symp-2\" className=\"justify-content-md-center\">\r\n                        <Col className=\"justify-content-md-center inputSym\" sm=\"6\" md=\"6\" lg=\"6\">\r\n                            <Typeahead\r\n                                size=\"lg\"\r\n                                clearButton\r\n                                id=\"SymptomsInput\"\r\n                                labelKey=\"name\"\r\n                                multiple\r\n                                options={this.symptoms}\r\n                                placeholder=\"Start Typing\"\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row id=\"warn\">\r\n                        <Col>\r\n                            Try to choose as much symptoms as possible.\r\n                        </Col>\r\n                    </Row>\r\n                    <Button onClick={this._onButtonClick} variant=\"success\" id=\"check\">Check!</Button>\r\n                    {this.state.showComponent ? <>\r\n                        <this.Predict />\r\n                        <Row>\r\n                            <Col>\r\n                                <Button as={Link} to=\"/ShowMore\" onClick={this._redirectToShowMore} variant=\"dark\">Know More!</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </>\r\n                        : null}\r\n                </Container>\r\n            </>\r\n        );\r\n\r\n        return (\r\n            < SymptomsInput />\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormClass;","import React from 'react';\r\nimport FormClass from './Components/FormClass';\r\nimport NavbarHead from './Components/NavbarHead';\r\n\r\nfunction DiseasePrediction() {\r\n\r\n    return (\r\n        <>\r\n            <NavbarHead />\r\n            <FormClass />\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default DiseasePrediction;","import React from 'react'\r\n\r\nclass CreateChart extends React.Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <h2>Yet to be updated. Be patient</h2>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateChart;","import React from 'react'\r\nimport './Statistics.css';\r\nimport CreateChart from './Components/CreateChart';\r\nimport NavbarHead from './Components/NavbarHead';\r\n\r\nclass Statistics extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <NavbarHead />\r\n                <CreateChart />\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport NavbarHead from './Components/NavbarHead';\r\nimport './ShowMore.css'\r\n\r\n\r\nclass ShowMore extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.disease='';\r\n        // this.GetDataFromForm=this.GetDataFromForm.bind(this);\r\n    }\r\n\r\n    // async GetDataFromForm() {\r\n    //     await fetch('https://diseasepredictorapp.herokuapp.com/GetMore')\r\n    //     .then(response => response.json())\r\n    //     .then(data => {\r\n    //         console.log(data.data);\r\n    //         this.disease = data.data;\r\n    //     });\r\n    // }\r\n\r\n    render() {\r\n        // this.GetDataFromForm();\r\n        return (\r\n            <>\r\n                <NavbarHead />\r\n                \r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShowMore;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Home from './Home';\r\nimport DiseasePrediction from './DiseasePrediction';\r\nimport Statistics from './Statistics';\r\nimport ShowMore from './ShowMore';\r\n\r\nconst Main = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path='/' component={Home}></Route>\r\n      <Route exact path='/DiseasePrediction' component={DiseasePrediction}></Route>\r\n      <Route exact path='/Statistics' component={Statistics}></Route>\r\n      <Route exact path='/ShowMore' component={ShowMore}></Route>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default Main;","import React from 'react';\nimport './App.css';\nimport NavbarHead from './Components/NavbarHead';\nimport Main from './Main';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}